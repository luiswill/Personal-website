{"version":3,"sources":["vendor/jquery.debouncedwidth.js"],"names":["$","timeout","$window","window","lastWidth","elements","lastTime","vendors","rAF","requestAnimationFrame","x","length","callback","element","currTime","Date","getTime","timeToCall","Math","max","id","setTimeout","debouncer","clearTimeout","currentWidth","width","index","trigger","event","special","debouncedwidth","threshold","setup","this","on","inArray","push","teardown","splice","off","jQuery"],"mappings":"CAQA,SAAUA,GACN,aAWA,IATA,IAAIC,EACAC,EAAUF,EAAEG,QACZC,EAAY,EACZC,KACAC,EAAW,EACXC,GAAW,KAAM,MAAO,SAAU,KAClCC,EAAML,OAAOM,sBAGTC,EAAI,EAAGA,EAAIH,EAAQI,SAAWH,IAAOE,EACzCF,EAAML,OAAOI,EAAQG,GAAG,yBAGxBF,IACAA,EAAM,SAASI,EAAUC,GACrB,IAAIC,GAAW,IAAIC,MAAOC,UACtBC,EAAaC,KAAKC,IAAI,EAAG,IAAML,EAAWR,IAC1Cc,EAAKjB,OAAOkB,WAAW,WACvBT,EAASE,EAAWG,IACrBA,GAEH,OADAX,EAAWQ,EAAWG,EACfG,IAKf,IAAIE,EAAY,WACZC,aAAatB,GACbA,EAAUoB,WAAY,WAGlB,IAAIG,EAAetB,EAAQuB,QAC3B,GAAGD,IAAiBpB,EAAW,CAE3BA,EAAYoB,EAGZ,IAAIE,EAAQrB,EAASM,OAGrBH,EAAI,WACA,KAAMkB,KACF1B,EAAEK,EAASqB,IAAQC,QAAQ,sBAKxC3B,EAAE4B,MAAMC,QAAQC,eAAeC,YAItC/B,EAAE4B,MAAMC,QAAQC,gBACZE,MAAO,WAEoB,IAApB3B,EAASM,SACRP,EAAYF,EAAQuB,QACpBzB,EAAEiC,MAAMC,GAAG,wBAAyBZ,KAIN,IAA/BtB,EAAEmC,QAAQF,KAAM5B,IACfA,EAAS+B,KAAKH,OAItBI,SAAU,WAEN,IAAIX,EAAQ1B,EAAEmC,QAAQF,KAAM5B,GACzBqB,GAAS,GACRrB,EAASiC,OAAOZ,EAAO,GAIJ,IAApBrB,EAASM,QACRX,EAAEiC,MAAMM,IAAI,0BAIpBR,UAAW,KAjFnB,CAoFG5B,OAAOqC","file":"jquery.debouncedwidth.js","sourcesContent":["/*!\n *\n * jquery-debouncedwidth\n * https://github.com/janrembold/jquery-debouncedwidth\n * Copyright (c) 2015 Jan Rembold <janrembold@gmail.com>; License: MIT\n *\n * */\n\n(function($) {\n    'use strict';\n\n    var timeout;\n    var $window = $(window);\n    var lastWidth = 0;\n    var elements = [];\n    var lastTime = 0;\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\n    var rAF = window.requestAnimationFrame;\n\n    // setup local requestAnimationFrame polyfill\n    for(var x = 0; x < vendors.length && !rAF; ++x) {\n        rAF = window[vendors[x]+'RequestAnimationFrame'];\n    }\n\n    if(!rAF) {\n        rAF = function(callback, element) {\n            var currTime = new Date().getTime();\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n            var id = window.setTimeout(function() {\n                callback(currTime + timeToCall);\n            }, timeToCall);\n            lastTime = currTime + timeToCall;\n            return id;\n        };\n    }\n\n    // use timeouts to debounce resize event\n    var debouncer = function(){\n        clearTimeout(timeout);\n        timeout = setTimeout( function(){\n\n            // check if width really changed\n            var currentWidth = $window.width();\n            if(currentWidth !== lastWidth) {\n                // set current width to last seen width\n                lastWidth = currentWidth;\n\n                // trigger debouncedwidth event for all elements\n                var index = elements.length;\n\n                // use requestAnimationFrame to prevent wrong trigger timings\n                rAF(function () {\n                    while(index--) {\n                        $(elements[index]).trigger('debouncedwidth');\n                    }\n                });\n            }\n\n        }, $.event.special.debouncedwidth.threshold);\n\n    };\n\n    $.event.special.debouncedwidth = {\n        setup: function(){\n            // start resize event only once\n            if(elements.length === 0) {\n                lastWidth = $window.width();\n                $(this).on('resize.debouncedwidth', debouncer);\n            }\n\n            // push new elements to internal array\n            if($.inArray(this, elements) === -1) {\n                elements.push(this);\n            }\n        },\n\n        teardown: function(){\n            // remove element from internal array\n            var index = $.inArray(this, elements);\n            if(index > -1) {\n                elements.splice(index, 1);\n            }\n\n            // clean up, if nothing is left to listen to\n            if(elements.length === 0) {\n                $(this).off('resize.debouncedwidth');\n            }\n        },\n\n        threshold: 150\n    };\n\n})(window.jQuery);\n"]}